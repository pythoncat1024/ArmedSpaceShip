tar 命令用于对文件进行打包压缩或解压，格式为“tar [选项] [文件]”。
在 Linux 系统中，常见的文件格式比较多，其中主要使用的是.tar 或.tar.gz 或.tar.bz2 格式，我
们不用担心格式太多而记不住，其实这些格式大部分都是由 tar 命令来生成的。刘遄老师将讲解
最重要的几个参数，以方便大家理解。 tar 命令的参数及其作用如表 2-14 所示。

-c 创建压缩文件
-x 解开压缩文件
-t 查看压缩包内有哪些文件
-z 用 Gzip 压缩或解压
-j 用 bzip2 压缩或解压
-v 显示压缩或解压的过程
-f 目标文件名
-p 保留原始的权限与属性
-P 使用绝对路径来压缩
-C 指定解压到的目录

tar -cvzf abc.tar.gz /etc # 将 /etc 目录打包成 abc.tar.gz

tar -xvzf abc.tar.gz -C backup/ # 将 abc.tar.gz 解压到 backup/目录中

------------------------------------------------------------------------

grep 命令用于在文本中执行关键词搜索，并显示匹配的结果，格式为“grep [选项] [文件]”。
grep 命令的参数及其作用如表 2-15 所示。
表 2-15 grep 命令的参数及其作用《Linux 就该这么学》 - 必读的 Linux 系统与红帽 RHCE 认证免费自学书籍
74
-b 将可执行文件（binary）当作文本文件（text）来搜索
-c 仅显示找到的行数
-i 忽略大小写
-n 显示行号
-v 反向选择—仅列出没有“关键词”的行


-----------------------------------------------------------------------

find 命令用于按照指定条件来查找文件，格式为“find [查找路径] 寻找条件 操作”。
本书中曾经多次提到“Linux 系统中的一切都是文件”，接下来就要见证这句话的分量了。
在 Linux 系统中，搜索工作一般都是通过 find 命令来完成的，它可以使用不同的文件特性作
为寻找条件（如文件名、大小、修改时间、权限等信息），一旦匹配成功则默认将信息显示到屏幕上。 

find 命令的参数以及作用如表 2-16 所示。
表 2-16 find 命令中的参数以及作用
-name 匹配名称
-perm 匹配权限（mode 为完全匹配， -mode 为包含即可）
-user 匹配所有者
-group 匹配所有组
-mtime -n +n 匹配修改内容的时间（-n 指 n 天以内， +n 指 n 天以前）
-atime -n +n 匹配访问文件的时间（-n 指 n 天以内， +n 指 n 天以前）
-ctime -n +n 匹配修改文件权限的时间（-n 指 n 天以内， +n 指 n 天以前）
-nouser 匹配无所有者的文件
-nogroup 匹配无所有组的文件
-newer f1 !f2 匹配比文件 f1 新但比 f2 旧的文件
--type
b/d/c/p/l/f
匹配文件类型（后面的字母参数依次表示块设备、目录、字符设备、管
道、链接文件、文本文件）
-size
匹配文件的大小（+50KB 为查找超过 50KB 的文件，而-50KB 为查找小
于 50KB 的文件）
-prune 忽略某个目录
-exec …… {}\; 后面可跟用于进一步处理搜索结果的命令（下文会有演示）

-------------------------------------------------------------------------

管道命令符
细心的读者肯定还记得在 2.6 节学习 tr 命令时曾经见到过一个名为管道符的东西。同时
按下键盘上的 Shift+\键即可输入管道符，其执行格式为“命令 A | 命令 B”。 管道命令符的作
用也可以用一句话来概括“把前一个命令原本要输出到屏幕的标准正常数据当作是后一个命
令的标准输入”。在 2.8 节讲解 grep 文本搜索命令时，我们通过匹配关键词/sbin/nologin 找出
了所有被限制登录系统的用户。在学完本节内容后，完全可以把下面这两条命令合并为一条：
➢ 找出被限制登录用户的命令是 grep "/sbin/nologin" /etc/passwd；
➢ 统计文本行数的命令则是 wc -l。
现在要做的就是把搜索命令的输出值传递给统计命令，即把原本要输出到屏幕的用户信
息列表再交给 wc 命令作进一步的加工，因此只需要把管道符放到两条命令之间即可，具体如
下。这简直是太方便了！

grep "/sbin/nologin" /etc/passwd | wc -l


管道与 xargs 的区分：

echo '--help' | cat  
echo '--help' | xargs cat 

看看上面两个输出结果就大致明白了。

大致理解就是 | 仅仅是把前面的内容当成文本给后面的，而 | xargs 会把前面的内容当成后面的命令参数选项